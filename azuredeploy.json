{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmname1": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "name of VM which has the portal role"
      }
    },
    "vmname2": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "name of VM which has the hosting role"
      }
    },
    "vmname3": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "name of VM which has the DB role"
      }
    },
    "vmnameAdminUserName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "username for all vms in this template"
      }
    },
    "vmnameAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "password for all vms in this template"
      }
    },
    "vmnameWindowsOSVersion": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2016-Datacenter",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "Windows-Server-Technical-Preview"
      ],
      "metadata": {
        "description": "Choose your os vor all vms"
      }
    },
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_DS2_v2",
      "allowedValues": [
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2"
      ],
      "metadata": {
        "description": "Virtual Machine Size for all VMs, all of them have SSD drives"
      }
    },
    "vmExtensionName1": {
      "type": "string",
      "metadata": {
        "description": "Extension (antimaleware) name for VM1 with portal role"
      }
    },
    "vmExtensionName2": {
      "type": "string",
      "metadata": {
        "description": "Extension (antimaleware) name for VM2 with hosting role"
      }
    },
    "vmExtensionName3": {
      "type": "string",
      "metadata": {
        "description": "Extension (antimaleware) name for VM3 with DB role"
      }
    },
    "pubnameDnsName1": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "choose your public dns name for name for VM1 with portal role"
      }

    },
    "pubnameDnsName2": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "choose your public dns name for name for VM2 with hosting role"
      }
    },
    "pubnameDnsName3": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "choose your public dns name for name for VM3 with DB role"
      }
    },
    "networkSecurityGroupName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Firewall deployed in all subnets, 443, 80, and 3389 open inboud"
      }
    },
    "numberOfdesktopInstances": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 1,
      "maxValue": 100,
      "metadata": {
        "description": "Number of desktop to deploy, min is 2, max is 100 "
      }
    },
    "dnsPrefixNameForPublicIP": {
      "type": "String",
      "metadata": {
        "description": "choose your dns for your desktop, they will be what ever you choose and 0,1,2 etc"
      }
    },
    "backupvaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Backup Vault"
      }
    },
    "skuTier": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard"
      ],
      "metadata": {
        "description": "SKU tier for the vault"
      }
    }
  },
    "variables": {
      "Vnet-EsnPrefix": "10.0.0.0/16",
      "Vnet-EsnSubnet1Name": "portal",
      "Vnet-EsnSubnet1Prefix": "10.0.1.0/24",
      "Vnet-EsnSubnet2Name": "hosting",
      "Vnet-EsnSubnet2Prefix": "10.0.2.0/24",
      "Vnet-EsnSubnet3Name": "data",
      "Vnet-EsnSubnet3Prefix": "10.0.3.0/24",
      "Vnet-EsnSubnet4Name": "desktop",
      "Vnet-EsnSubnet4Prefix": "10.0.4.0/24",
      "lyesstName": "[concat('lyesst', uniqueString(resourceGroup().id))]",
      "vmnameImagePublisher": "MicrosoftWindowsServer",
      "vmnameImageOffer": "WindowsServer",
      "vmnameOSDiskName": "vmnameOSDisk",
      "vmnameVnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'Vnet-Esn')]",
      "vmnameSubnetRef1": "[concat(variables('vmnameVnetID'), '/subnets/', variables('Vnet-EsnSubnet1Name'))]",
      "vmnameSubnetRef2": "[concat(variables('vmnameVnetID'), '/subnets/', variables('Vnet-EsnSubnet2Name'))]",
      "vmnameSubnetRef3": "[concat(variables('vmnameVnetID'), '/subnets/', variables('Vnet-EsnSubnet3Name'))]",
      "vmnameSubnetRef4": "[concat(variables('vmnameVnetID'), '/subnets/', variables('Vnet-EsnSubnet4Name'))]",
      "vmnameNicName1": "[concat(parameters('vmname1'), 'NetworkInterface')]",
      "vmnameNicName2": "[concat(parameters('vmname2'), 'NetworkInterface')]",
      "vmnameNicName3": "[concat(parameters('vmname3'), 'NetworkInterface')]",
      "pubnameName1": "pubname1",
      "pubnameName2": "pubname2",
      "pubnameName3": "pubname3",
      "nicname": "nic"

    },



  "resources": [
    {
      "type": "Microsoft.RecoveryServices/vaults",
      "apiVersion": "2016-06-01",
      "name": "[parameters('backupvaultName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "RS0",
        "tier": "[parameters('skuTier')]"
      },
      "properties": {
      }
    },
    {
      "apiVersion": "2017-03-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "https",
            "properties": {
              "description": "rule to allow https",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "http",
            "properties": {
              "description": "rule to allow http",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          },
          {
            "name": "RDP",
            "properties": {
              "description": "rule to allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 120,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-10-01",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "Vnet-Esn",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('Vnet-EsnPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('Vnet-EsnSubnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('Vnet-EsnSubnet1Prefix')]",
              "networksecuritygroup": {
                "id": "[resourceId('MicMicrosoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"

              }
            }
          },
          {
            "name": "[variables('Vnet-EsnSubnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('Vnet-EsnSubnet2Prefix')]",
              "networksecuritygroup": {
                "id": "[resourceId('MicMicrosoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"

              }
            }
          },
          {
            "name": "[variables('Vnet-EsnSubnet3Name')]",
            "properties": {
              "addressPrefix": "[variables('Vnet-EsnSubnet3Prefix')]",
              "networksecuritygroup": {
                "id": "[resourceId('MicMicrosoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"

              }
            }

          },
          {
            "name": "[variables('Vnet-EsnSubnet4Name')]",
            "properties": {
              "addressPrefix": "[variables('Vnet-EsnSubnet4Prefix')]",
              "networksecuritygroup": {
                "id": "[resourceId('MicMicrosoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"

              }
            }
          }

        ]
      },
      "tags": {
        "displayName": "Vnet-Esn"
      },
      "type": "Microsoft.Network/virtualNetworks"
    },
    {
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'Vnet-Esn')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('pubnameName1'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[variables('vmnameNicName1')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vmnameSubnetRef1')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pubnameName1'))]"
              }
            }
          }
        ]
      },
      "tags": {
        "displayName": "vmnameNic1"
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "name": "[variables('vmnameNicName2')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'Vnet-Esn')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('pubnameName2'))]"
      ],
      "tags": {
        "displayName": "vmnameNic2"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vmnameSubnetRef2')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pubnameName2'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('vmnameNicName3')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'Vnet-Esn')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('pubnameName3'))]"
      ],
      "tags": {
        "displayName": "vmnameNic3"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig3",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vmnameSubnetRef3')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pubnameName3'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('nicName'),copyIndex())]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', concat(parameters('dnsPrefixNameForPublicIP'),copyIndex()))]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'Vnet-Esn')]"

      ],
      "tags": {
        "displayName": "VMnicdesktop"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat('ipconfig', copyIndex())]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "PublicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('dnsPrefixNameForPublicIP'),copyIndex()))]"
              },
              "subnet": {
                "id": "[variables('vmnameSubnetRef4')]"
              }

            }
          }
        ]
      },
      "copy": {
        "name": "nicCopy",
        "count": "[parameters('numberOfdesktopInstances')]"
      }
    },
    {
      "apiVersion": "2017-03-30",
      "dependsOn": [ "[concat('Microsoft.Network/networkInterfaces/', concat(variables('nicname'),copyIndex()))]" ],
      "location": "[resourceGroup().location]",
      "name": "[concat('desktop', copyIndex())]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[concat('desktop', copyIndex())]",
          "adminUsername": "[parameters('vmnameAdminUsername')]",
          "adminPassword": "[parameters('vmnameAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vmnameImagePublisher')]",
            "offer": "[variables('vmnameImageOffer')]",
            "sku": "[parameters('vmnameWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createoption": "FromImage"
          }


        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicname'), copyindex()))]"
            }
          ]
        }
      },
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('numberOfdesktopInstances')]"
      },

      "tags": {
        "displayName": "Desktop"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "name": "[parameters('vmname3')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('vmnameNicName3'))]"
      ],
      "tags": {
        "displayName": "DB1"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmname3')]",
          "adminUsername": "[parameters('vmnameAdminUsername')]",
          "adminPassword": "[parameters('vmnameAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vmnameImagePublisher')]",
            "offer": "[variables('vmnameImageOffer')]",
            "sku": "[parameters('vmnameWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createoption": "FromImage"
          }


        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmnameNicName3'))]"
            }
          ]
        }
      }

    },
    {
      "name": "[parameters('vmname2')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('vmnameNicName2'))]"
      ],
      "tags": {
        "displayName": "Hosting"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmname2')]",
          "adminUsername": "[parameters('vmnameAdminUsername')]",
          "adminPassword": "[parameters('vmnameAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vmnameImagePublisher')]",
            "offer": "[variables('vmnameImageOffer')]",
            "sku": "[parameters('vmnameWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createoption": "FromImage"
          }


        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmnameNicName2'))]"
            }
          ]
        }
      }

    },
    {
      "name": "[parameters('vmname1')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('vmnameNicName1'))]"
      ],
      "tags": {
        "displayName": "portal"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmname1')]",
          "adminUsername": "[parameters('vmnameAdminUsername')]",
          "adminPassword": "[parameters('vmnameAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vmnameImagePublisher')]",
            "offer": "[variables('vmnameImageOffer')]",
            "sku": "[parameters('vmnameWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createoption": "FromImage"
          }


        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmnameNicName1'))]"
            }
          ]
        }
      }

    },
    {
      "name": "[variables('pubnameName1')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "pubname1"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('pubnameDnsName1')]"
        }
      }
    },
    {
      "name": "[variables('pubnameName2')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "pubname2"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('pubnameDnsName2')]"
        }
      }
    },
    {
      "name": "[variables('pubnameName3')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "pubname3"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('pubnameDnsName3')]"
        }
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('dnsPrefixNameForPublicIP'),copyIndex())]",
      "dependsOn": [],
      "location": "[resourceGroup().location]",

      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('dnsPrefixNameForPublicIP'),copyIndex())]"
        }
      },
      "copy": {
        "name": "publicIpCopy",
        "count": "[parameters('numberOfdesktopInstances')]"
      },

      "tags": {
        "displayName": "Desktpub"
      }

    },

    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmname1'),'/', parameters('vmExtensionName1'))]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmname1'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Security",
        "type": "IaaSAntimalware",
        "typeHandlerVersion": "1.3",
        "settings": {
          "AntimalwareEnabled": "true",
          "RealtimeProtectionEnabled": "true",
          "ScheduledScanSettings": {
            "isEnabled": "true",
            "scanType": "Quick",
            "day": "7",
            "time": "120"
          }
        }
       

      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmname2'),'/', parameters('vmExtensionName2'))]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmname2'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Security",
        "type": "IaaSAntimalware",
        "typeHandlerVersion": "1.3",
        "settings": {
          "AntimalwareEnabled": "true",
          "RealtimeProtectionEnabled": "true",
          "ScheduledScanSettings": {
            "isEnabled": "true",
            "scanType": "Quick",
            "day": "7",
            "time": "120"
          }
        }
        

      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmname3'),'/', parameters('vmExtensionName3'))]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmname3'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Security",
        "type": "IaaSAntimalware",
        "typeHandlerVersion": "1.3",
        "settings": {
          "AntimalwareEnabled": "true",
          "RealtimeProtectionEnabled": "true",
          "ScheduledScanSettings": {
            "isEnabled": "true",
            "scanType": "Quick",
            "day": "7",
            "time": "120"
          }
        }
      }
      
    }
  ],
    "outputs": {}
  }
